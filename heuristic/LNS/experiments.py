from lns import run_tests
from glob import glob
import re
from os.path import join

params = {
    # alphabet = 4
    (4,100,2): (70, 70, 20),
    (4,500,2): (90, 90, 10),
    (4,1000,2): (90, 90, 5),
    (4,100,5): (90, 90, 10),
    (4,100,25): (90, 90, 10),
    (4,500,25): (90, 90, 15),
    (4,1000,50): (90, 90, 15),
    (4,100,10): (90, 90, 10),
    (4,100,50): (90, 90, 10),
    (4,100,100): (90, 90, 10),
    (4,500,5): (90, 90, 10),
    (4,500,10): (90, 90, 10),
    (4,500,50): (90, 90, 10),
    (4,500,100): (90, 90, 10),
    (4,1000,5): (90, 90, 10),
    (4,1000,10): (90, 90, 10),
    (4,1000,25): (90, 90, 10),
    (4,1000,100): (90, 90, 10),
    (4,1000,500): (90, 90, 20),
    (4,2000,100): (90, 90, 40),
    (4,2000,200): (90, 90, 40),    
    
    (4,2000,2000): (90, 90, 80),
    (4,2000,4000): (90, 90, 160),    
    (4,4000,2000): (90, 90, 160),
    (4,4000,4000): (90, 90, 320),
    # alphabet = 12
    (12,100,2): (80, 80, 20),
    (12,500,2): (90, 90, 5),
    (12,1000,2): (90, 90, 15),
    (12,100,5): (90, 90, 15),
    (12,100,50): (90, 90, 15),
    (12,500,25): (90, 90, 20),
    (12,1000,50): (90, 90, 20),
    (12,100,10): (40, 40, 20),
    (12,100,25): (40, 40, 30),
    (12,100,100): (40, 40, 30),
    (12,500,5): (40, 40, 30),
    (12,500,10): (40, 40, 30),    
    (12,500,100): (40, 40, 30),
    (12,500,50): (90, 90, 5),    
    (12,1000,5): (90, 90, 10),
    (12,1000,10): (90, 90, 10),
    (12,1000,25): (90, 90, 15),
    (12,1000,100): (90, 90, 20),
    (12,2000,100): (90, 90, 80),
    (12,2000,200): (90, 90, 80),
    (12,2000,2000): (90, 90, 80),
    (12,2000,4000): (90, 90, 160),    
    (12,4000,2000): (90, 90, 160),
    (12,4000,4000): (90, 90, 320), 
    # alphabet = 20
    (20,100,2): (90, 90, 10),
    (20,100,25): (90, 90, 10),
    (20,100,50): (90, 90, 10),    
    (20,100,100): (90, 90, 15),
    (20,500,2): (91, 91, 15),
    (20,500,5): (91, 91, 15),
    (20,500,10): (91, 91, 15),
    (20,1000,2): (90, 90, 10),
    (20,1000,5): (90, 90, 10),
    (20,100,5): (90, 90, 20),
    (20,500,25): (90, 90, 10),
    (20,1000,50): (90, 90, 20),
    (20,100,10): (70, 70, 20),
    (20,500,50): (90, 90, 5),
    (20,500,100): (90, 90, 5),
    (20,1000,25): (90, 90, 20),
    (20,1000,10): (90, 90, 20),
    (20,1000,100): (90, 90, 20),   
    (20,2000,100): (90, 90, 80),
    (20,2000,200): (90, 90, 80),    
          
    (20,2000,2000): (90, 90, 80),
    (20,2000,4000): (90, 90, 160),    
    (20,4000,2000): (90, 90, 160),
    (20,4000,4000): (90, 90, 320),
    
    (4,100,250): (90, 90, 10),
    (4,100,500): (90, 90, 10),
    (4,500,250): (90, 90, 15),
    (4,500,500): (90, 90, 15),
    (4,1000,500): (90, 90, 15),
    (4,1000,250): (90, 90, 15),
    (12,100,250): (40, 40, 30),
    (12,100,500): (40, 40, 30),
    (12,500,250): (40, 40, 30),
    (12,500,500): (40, 40, 30),
    (12,1000,500): (40, 40, 30),
    (12,1000,250): (40, 40, 30),
    (20,100,250): (90, 90, 10),
    (20,100,500): (90, 90, 10),
    (20,500,250): (91, 91, 15),
    (20,500,500): (91, 91, 15),
    (20,1000,250): (91, 91, 15),
    (20,1000,250): (91, 91, 15),
    (20,1000,500): (91, 91, 80),
}


file_name_regex = r"words_(?P<n>\d{3,4})_(?P<m>\d{4})_(?P<alphabet>\d{2})_0.\d+.dat"


if __name__ == '__main__':
    for file_name in glob(join('..', 'data', '*.dat')):
        file_name_params_matches = re.search(file_name_regex, file_name)
        if file_name_params_matches:
            n, m, alphabet = file_name_params_matches.groups()
            n, m, alphabet = int(n), int(m), int(alphabet)
            for k in [m//20, m//10]:
                perc_l, perc_u, t_max = params[(alphabet, n, k)]
                # perc_l, perc_u, t_max = params[(alphabet, n, m)]
                run_tests(file_name, k, n//2, t_max, perc_l, perc_u, 3)